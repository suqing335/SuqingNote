diff --git a/legacy_hal/Android.mk b/legacy_hal/Android.mk
index 0d6c6d5..6f5afc9 100755
--- a/legacy_hal/Android.mk
+++ b/legacy_hal/Android.mk
@@ -12,7 +12,8 @@ LOCAL_SRC_FILES := \
     audio_hw_hal.cpp\
     alsa_mixer.c\
     alsa_route.c\
-    alsa_pcm.c
+    alsa_pcm.c \
+	jstarAudio.c
 
 ifeq ($(BOARD_HAVE_BLUETOOTH),true)
   LOCAL_CFLAGS += -DWITH_A2DP
@@ -37,6 +38,10 @@ LOCAL_STATIC_LIBRARIES := libmedia_helper \
 
 LOCAL_C_INCLUDES := \
     $(call include-path-for, speex)
+    
+#LOCAL_CFLAGS += -DANDROID_VPROC_API_DBG_INFO
+#LOCAL_CFLAGS += -DANDROID_VPROC_API_DBG_ERROR
+    
 LOCAL_SHARED_LIBRARIES:= libc libcutils libutils libmedia libhardware_legacy libspeexresampler
 include $(BUILD_SHARED_LIBRARY)
 include $(CLEAR_VARS)
@@ -56,7 +61,8 @@ LOCAL_SRC_FILES := \
     audio_hw_hal.cpp\
     alsa_mixer.c\
     alsa_route.c\
-    alsa_pcm.c
+    alsa_pcm.c \
+	jstarAudio.c
 
 LOCAL_CFLAGS += -DSUPPORT_USB
 LOCAL_MODULE := audio.alsa_usb.$(TARGET_BOARD_HARDWARE)
@@ -72,6 +78,8 @@ LOCAL_MODULE_TAGS := optional
 LOCAL_STATIC_LIBRARIES := libmedia_helper \
 	libspeex
 LOCAL_CFLAGS := -Wno-unused-parameter
+#LOCAL_CFLAGS += -DANDROID_VPROC_API_DBG_INFO
+#LOCAL_CFLAGS += -DANDROID_VPROC_API_DBG_ERROR
 LOCAL_C_INCLUDES := \
     $(call include-path-for, speex)
 LOCAL_SHARED_LIBRARIES:= libc libcutils libutils libmedia libhardware_legacy libspeexresampler
@@ -140,3 +148,11 @@ endif
 include $(BUILD_SHARED_LIBRARY)
 endif
 
+include $(CLEAR_VARS)
+LOCAL_SRC_FILES:= tw_ldcfg.c
+LOCAL_MODULE:= tw_ldcfg
+LOCAL_CFLAGS += -DVPROC_API_DBG_INFO
+LOCAL_CFLAGS += -DVPROC_API_DBG_ERROR
+LOCAL_SHARED_LIBRARIES := libc libcutils
+include $(BUILD_EXECUTABLE)
+
diff --git a/legacy_hal/AudioHardware.h b/legacy_hal/AudioHardware.h
index d8dcb75..f53005e 100755
--- a/legacy_hal/AudioHardware.h
+++ b/legacy_hal/AudioHardware.h
@@ -57,7 +57,8 @@ namespace android_audio_legacy {
 // Additionnal latency introduced by audio DSP and hardware in ms
 #define AUDIO_HW_OUT_LATENCY_MS 0
 // Default audio output sample rate
-#define AUDIO_HW_OUT_SAMPLERATE 44100
+//#define AUDIO_HW_OUT_SAMPLERATE 44100
+#define AUDIO_HW_OUT_SAMPLERATE 48000
 // Default audio output channel mask
 #define AUDIO_HW_OUT_CHANNELS (AudioSystem::CHANNEL_OUT_STEREO)
 // Default audio output sample format
@@ -70,7 +71,8 @@ namespace android_audio_legacy {
 #define AUDIO_HW_OUT_PERIOD_BYTES (AUDIO_HW_OUT_PERIOD_SZ * 2 * sizeof(int16_t))
 
 // Default audio input sample rate
-#define AUDIO_HW_IN_SAMPLERATE 44100
+//#define AUDIO_HW_IN_SAMPLERATE 44100
+#define AUDIO_HW_IN_SAMPLERATE 48000
 // Default audio input channel mask
 #define AUDIO_HW_IN_CHANNELS (AudioSystem::CHANNEL_IN_STEREO)
 // Default audio input sample format
diff --git a/legacy_hal/alsa_route.c b/legacy_hal/alsa_route.c
index 46ab9a3..dd26a91 100755
--- a/legacy_hal/alsa_route.c
+++ b/legacy_hal/alsa_route.c
@@ -28,6 +28,8 @@
 
 #include "codec_config/config_list.h"
 
+#include "jstarAudio.h"
+
 #define PCM_DEVICE0_PLAYBACK 0
 #define PCM_DEVICE0_CAPTURE 1
 #define PCM_DEVICE1_PLAYBACK 2
@@ -372,8 +374,10 @@ int route_set_controls(unsigned route)
         return -EINVAL;
     }
 
-    if (route_info->controls_count > 0)
-        set_controls(mMixer, route_info->controls, route_info->controls_count);
+    //if (route_info->controls_count > 0)
+    //    set_controls(mMixer, route_info->controls, route_info->controls_count);
+
+	set_config_on_route(route);
 
     return 0;
 }
@@ -406,7 +410,7 @@ struct pcm *route_pcm_open(unsigned route, unsigned int flags)
     }
 #endif
 
-    ALOGV("route_pcm_open() route %d", route);
+    ALOGE("route_pcm_open() route %d", route);
 
     is_playback = is_playback_route(route);
 
@@ -419,7 +423,7 @@ struct pcm *route_pcm_open(unsigned route, unsigned int flags)
         ALOGE("route_pcm_open() Can not get config of route");
         return NULL;
     }
-
+	set_config_on_status(route);
     ALOGD("route_info->sound_card %d, route_info->devices 0 %s %s",
         route_info->sound_card,
         (route_info->devices == DEVICES_0_1 || route_info->devices == DEVICES_0_2 ||
